"""Библиотека requests является стандартным инструментом для составления HTTP-запросов в Python. 
Библиотека позволяет нам легко и с минимальным количеством кода взаимодействовать с веб-приложениями.
Это необходимо нам для решения любых задач, связанных с передачей информации от пользователя к серверу и обратно.
Простой и аккуратный API значительно облегчает трудоемкий процесс создания запросов. 
Таким образом, можно сосредоточиться на взаимодействии со службами и использовании данных в приложении.
Для начала работы потребуется установить библиотеку requests. Для этого используется следующая команда.
$ pip install requests
Сразу после установки requests можно полноценно использовать в приложении. Импорт requests производится следующим образом.
Python
import requests
Первое, что мы сделаем - проверим статус-код ресурса. 
Иными словами: узнаем, работает ли сайт. Для этого мы создадим простой запрос GET. 
r = requests.get('http://learn.python.ru')
Проверим, что возвращает нам данный запрос:

>>> r 
<Response [200]>
Как мы можем видеть, в качестве ответа мы получили объект класса Response и код 200. 
Этот код говорит, что ресурс работает и можно с ним взаимодействовать.
Скачаем изображение с сайта
>>> import requests
>>> image = requests.get('https://learn.python.ru/media/projects/sl1_Cj4bKxp.png')
>>> with open('new_image.png', 'wb') as f:
...       f.write(image.content)
После выполнения данного скрипта, мы увидим новое изображение под названием new_image.png в директории, из которой у нас запущен скрипт.
Загрузим файл на сервер
Для следующего примера воспользуемся сайтом для тестирования HTTP запросов Webhook.site. В качестве URL мы будем использовать ссылку, которая генерируется на сайте автоматически. 
>>> import requests
>>> url = 'https://webhook.site/c253969f-1ad8-4888-812e-e57f4eb4924e'
>>> with open('test.txt', 'w') as f:
...     f.write('текст для проверки загрузки файла')
>>> with open('test.txt', 'rb') as f:
...     r = requests.post(url, {'files': f})
...     print(r)
После выполнения скрипта в терминале мы увидим уже знакомый нам объект класса Response и статус код - 200. Это означает, что запрос выполнился. 
Вернемся снова на сайт Webhook.site, выберем в правой колонке наш запрос и сможем посмотреть содержание выполненного запроса
Использование библиотеки Requests не ограничивается приведенными выше примерами. Данная библиотека является очень удобным инструментом для взаимодействия с HTTP

Официальный сайт: https://2.python-requests.org/en/master/user/advanced/"""